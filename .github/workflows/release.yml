name: Build and Release
on:
  push:
    tags:
      - v*

jobs:

  getversion:
    runs-on: ubuntu-latest
    name: Read package.json version
    outputs:
      version: ${{ steps.vstep.outputs.version }}
    steps:
      - uses: actions/checkout@v2

      - name: Read version
        id: vstep
        run: |
          PACKAGE_VERSION=$(cat ./package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
          echo "::set-output name=version::$PACKAGE_VERSION"

  build_and_export:
    runs-on: ubuntu-latest
    name: Build & Export
    needs: getversion
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn install --pure-lockfile

      - name: Build and Export Next Application
        run: |
          yarn run build
          yarn run export
          yarn run package-debian

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [getversion, build_and_export]
    steps:
      - uses: actions/checkout@v2
      - uses: ncipollo/release-action@v1
        with:
          tag: v${{ needs.getversion.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "*.deb"

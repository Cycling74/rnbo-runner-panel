name: Build and Release
on:
  push:
    tags:
      - v*

jobs:

  getversion:
    runs-on: ubuntu-latest
    name: Read package.json version
    outputs:
      version: ${{ steps.vstep.outputs.version }}
    steps:
      - uses: actions/checkout@v2

      - name: Read version
        id: vstep
        run: |
          PACKAGE_VERSION=$(cat ./package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
          echo "::set-output name=version::$PACKAGE_VERSION"

  build_and_export:
    runs-on: ubuntu-latest
    name: Build, Export, Release
    needs: getversion
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: Build and Export Next Application
        run: |
          npm run build

      - name: Build Debian Package
        run: npm run package-debian
        env:
          PKG_NAME: ${{ secrets.RNBO_DEB_PKG_NAME }}
          PKG_VERSION: ${{ needs.getversion.outputs.version }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ needs.getversion.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "*.deb"

      - name: Upload deb file
        uses: actions/upload-artifact@v2
        with:
          name: deb
          path: "*.deb"

  publsh_apt:
    runs-on: [self-hosted, macOS, x64, rnbo]
    needs: build_and_export
    steps:
      - name: Download deb file
        uses: actions/download-artifact@v2
        with:
          name: deb
      - name: Add to aptly and publish
        shell: bash
        run: |
          aptly repo add bookworm-rpi *.deb
          aptly publish update -batch -passphrase=${{ secrets.APTLY_GPG_PASSWORD }} bookworm s3:c74:

